#include "stdio.h"
#include "time.h"
#define MASK(x) (1 << (x))
#define TRIGPIN 5
#define ECHOPIN 6

uint32_t count=0;
double distance=0;

void initUltraSound(void){
	
	PORTC->PCR[TRIGPIN] &= ~PORT_PCR_MUX_MASK;
  PORTC->PCR[TRIGPIN] |= PORT_PCR_MUX(1);
	PORTC->PCR[ECHOPIN] &= ~PORT_PCR_MUX_MASK;
  PORTC->PCR[ECHOPIN] |= PORT_PCR_MUX(1);
	
	PTC->PDDR |= MASK(TRIGPIN);
	PTC->PDDR &= ~MASK(ECHOPIN);
}

void onTrigPin(void) {
	PTC->PSOR = MASK(TRIGPIN);
	
}

void offTrigPin(void) {
	PTC->PCOR = MASK(TRIGPIN);
	
}

void sensor(void){

	double microseconds;
	
	
	while(1){
		
		count = 0;
		
		//change to OSdelay if possible
		delay(0xA);
		onTrigPin();
		delay(0x30);	
		offTrigPin();
	
		while(!(PTC->PDIR & MASK(ECHOPIN)));
		
		while(PTC->PDIR & MASK(ECHOPIN)){
			count++;	
			
			if(!(PTC->PDIR & MASK(ECHOPIN))){
				
				break;
			}
		}
		//count increments at 4.8Mhz=>4.8cycles/us ->24.0/5
		microseconds = (count * 5)/24.0;
		
		//CHANGE SPPEED OF SOUN IF U WANT TO CALCULATE CORRECTLY
		distance =  microseconds * 0.034 / 2;
		

		//replace delay with osDelay
		// mask it as STOP
		/*
		if(distance<15){
			fws(1);
		}
		*/
		
		if(distance<14.5){//change back to 15 for tmr
			offMotors();
			osDelay(500);
			break;
		}

	}	
	
}